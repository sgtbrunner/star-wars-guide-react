{"version":3,"sources":["img/logo.png","components/Header.js","components/SearchBox.js","components/SupportFunctions.js","components/Card.js","components/CardList.js","components/Modal.js","components/Footer.js","containers/App.js","index.js"],"names":["module","exports","Header","href","className","id","src","require","alt","SearchBox","searchChange","type","placeholder","onChange","pages","urls","getCharacters","a","getData","concatArray","console","log","Promise","all","map","url","fetch","response","json","array","i","people","length","concat","results","CreateList","list","item","index","obj1","obj2","prop","hasOwnProperty","augment","getImage","getStats","toString","getFilms","movies","movie","title","Card","name","openModal","onClick","CardList","characters","filteredCharacters","character","key","Modal","showModal","race","planet","onCloseClick","birth_year","gender","Footer","rel","target","App","onSearchChange","event","setState","searchfield","value","clickedcard","state","species","then","homeworld","films","showmodal","this","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ef0f7a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fd0488c7.png\";","import React from 'react';\r\n\r\nexport const Header = function() {\r\n\treturn (\r\n\t\t// src={require(\"url\")} is the sintax for local imgs\r\n\t\t<a href=\"#flex-container\">\r\n\t\t\t<div className=\"cover-container\">\r\n\t\t\t\t<img id =\"cover-image\" src={require(\"../img/logo.png\")} alt=\"logo\"/>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t\t<div className=\"pa2 ma3 br3 custom-box\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"f4 pa2 w-100 ba bw1 custom-field\"\r\n\t\t\t\t\ttype=\"search\" \r\n\t\t\t\t\tplaceholder=\"find your favorite Star Wars character...\"\r\n\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t);\r\n }\r\n\r\n export default SearchBox;","// ** These functions support the main App and its Components dealing with\r\n// API, its errors and inconsistencies.  \r\n\r\n// VARIABLE DECLARATION\r\n\tlet pages = [];\r\n\tconst urls = [\r\n\t\t'https://swapi.dev/api/people/',\r\n\t\t'https://swapi.dev/api/people/?page=2',\r\n\t\t'https://swapi.dev/api/people/?page=3',\r\n\t\t'https://swapi.dev/api/people/?page=4',\r\n\t\t'https://swapi.dev/api/people/?page=5',\r\n\t\t'https://swapi.dev/api/people/?page=6',\r\n\t\t'https://swapi.dev/api/people/?page=7',\r\n\t\t'https://swapi.dev/api/people/?page=8',\r\n\t\t'https://swapi.dev/api/people/?page=9',\r\n\t]\r\n\t\r\n// FUN FUN FUNCTIONS\r\n// Gets all the characters from different pages and concat them in a single array\r\nconst getCharacters = async function() {\r\n\ttry {\r\n\t\tawait getData();\t\t\t\r\n\t\treturn await concatArray(pages);\r\n\t} catch (err) {\r\n\t   \tconsole.log('ooooooops', err);\t\t\r\n\t}\r\n}\r\n\r\n// Fetches all the character data information from API server and store it in pages as it's defined on SWAPI\r\nconst getData = async function() {\r\n\ttry {\r\n\t\tpages = await Promise.all(urls.map(async function(url) {\r\n\t        const response = await fetch(url);\r\n\t        return await response.json();\r\n\t    }));\r\n\t} catch (err) {\r\n\t   \t\tconsole.log('ooooooops', err);\t\r\n\t}\r\n}\r\n\r\n// Function for concating information in an array\r\nconst concatArray = (array) => {\r\n\tlet people = [];\r\n\tlet i;\r\n\tfor( i=0 ; i<array.length ; i++ ) {\r\n\t\tpeople = people.concat(array[i].results);\r\n\t}\r\n\treturn people;\r\n}\r\n\r\n// ** This auxiliar function adds obj2 props into obj1 and returns obj1\r\nconst augment = (obj1, obj2) => {\r\n\tlet prop;\r\n\tfor(prop in obj2) {\r\n\t\tif (obj2.hasOwnProperty(prop) && !obj1[prop]) {\r\n\t\t\tobj1[prop] = obj2[prop];\r\n\t\t}\r\n\t}\r\n\treturn obj1;\r\n}\r\n\r\n// ** This function adds ID property to every object without ID inside a given array of objects\r\nconst addId = (array) => {\r\n\tarray.map((item, index) => {\r\n\t\t\tconst newprop = {id: index}\r\n\t\t\treturn item = augment(item, newprop);\r\n\t})\r\n}\r\n\r\nconst CreateList = async function() {\r\n\tlet list = await getCharacters();\r\n\taddId(list);\r\n\treturn await list;\r\n}\r\n\r\n// ** SWAPI has an issue handling https://swapi.co/api/people/17/ returnig error 404,\r\n// \twhich can be bypassed with the following function\r\nexport const getImage = (index) => {\r\n\t\tif (index < 16) {\r\n\t\t\t\treturn `https://starwars-visualguide.com/assets/img/characters/${(index+1)}.jpg`;\r\n\t\t\t} else {\r\n\t\t\t\treturn `https://starwars-visualguide.com/assets/img/characters/${(index+2)}.jpg`;\r\n\t\t}\r\n\t}\r\n\r\n\t\t// Used for fetching \"species\" and \"homeworld\" information from characters\r\nexport const getStats = async function(url) {\r\n\t\t// SWAPI hasn't defined \"species\" nor \"homeworld\" for some characters, therefore it has to be handled accordingly\r\n\t\tif (url.toString()!=='' && url.toString()!==[] && url.toString()!=={}) {\r\n\t\t\ttry {\t\t\r\n\t\t        const response = await fetch(url);\r\n\t\t        return await response.json();\r\n\t\t\t} catch (err) {\r\n\t\t   \t\tconsole.log('ooooooops', err);\t\t\r\n\t\t\t}\t\r\n\t\t} else {\r\n\t\t\treturn await {\"name\": \"unknown\"};\r\n\t\t}\r\n\t}\r\n\r\n\t// Used for fetching \"films\" information from characters\r\nexport const getFilms = async function(urls) {\r\n\t\tlet movies = '';\r\n\t\tlet i=0;\r\n\t\ttry {\r\n\t\t\tfor (i=0; i<urls.length; i++) {\r\n\t\t\t\tlet response = await fetch(urls[i]);\r\n\t\t\t\tlet movie = await response.json();\r\n\t\t\t\tif (i < urls.length-1) {\r\n\t\t\t\t\tmovies += movie.title + ', ';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmovies += movie.title;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t} catch (err) {\r\n\t\t   \t\tconsole.log('ooooooops', err);\t\r\n\t\t\t}\r\n\t\t  \treturn movies;\r\n\t}\r\n\r\nexport default CreateList;","import React from 'react';\r\nimport {getImage} from './SupportFunctions'\r\n\r\nconst Card = function({name, index, openModal}) {\r\n\treturn (\r\n\t\t<div onClick={openModal}>\r\n\t\t\t<div className=\"card\" id={index}>\r\n\t\t\t\t\t<img className =\"picture\" \r\n\t\t\t\t\t\t src={getImage(index)} \r\n\t\t\t\t\t\t alt=\"character-portrait\"\r\n\t\t\t\t\t\t id={index}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"title\"\r\n\t\t\t\t\t\t id={index}\r\n\t\t\t\t\t>{name}\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = function({characters, filteredCharacters, openModal}) {\r\n\tif (filteredCharacters.length) {\r\n\t\treturn (\r\n\t\t\t<div id='cardlist'>\r\n\t\t\t\t{\r\n\t\t\t\t\tfilteredCharacters.map((character, index) =>{\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t\t\tname = {character.name}\r\n\t\t\t\t\t\t\t\t\tindex = {character.id}\r\n\t\t\t\t\t\t\t\t\tkey = {character.id}\r\n\t\t\t\t\t\t\t\t\topenModal = {openModal}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\t          \r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t\t<div className=\"pa2 ma3 custom-field tc\">\r\n\t\t\t\t\t<p1 className=\"custom-font animate-flicker tc\">No characters found!</p1>\r\n\t\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport {getImage} from '../components/SupportFunctions';\r\n\r\nconst Modal = function({showModal, character, race, planet, movies, onCloseClick}) {\r\n\tlet showContent = (race && planet && movies) ? true : false;\r\n\tif (!showModal) {\r\n\t\t\treturn null;\r\n\t} else if(!showContent){\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"myModal\"\r\n\t\t\t\t\t className=\"modal\"\r\n\t\t\t\t\t onClick={onCloseClick}>\r\n\t\t\t\t\t<div className=\"modal-load\">\r\n\t\t\t\t\t\t<div className=\"loader\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"myModal\"\r\n\t\t\t\t\t className=\"modal\"\r\n\t\t\t\t\t onClick={onCloseClick}>\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t<span className=\"close\"\r\n\t\t\t\t\t\t\t  onClick={onCloseClick}\r\n\t\t\t\t\t\t\t  >&times;\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"grid-container\">\r\n\t\t\t\t\t\t\t<div className=\"char-name\">\r\n\t\t\t\t\t\t\t\t{character.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<img src={getImage(character.id)} \r\n\t\t\t\t\t\t\t\t className=\"portrait\"\r\n\t\t\t\t\t\t\t\t alt={character.id} />\r\n\t\t\t\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t\t\t\t<u>Birth Year</u>:&nbsp;  \r\n\t\t\t\t\t\t\t\t{character.birth_year}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t\t\t\t<u>Gender</u>:&nbsp;  \r\n\t\t\t\t\t\t\t\t{character.gender}\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t\t\t\t<u>Species</u>:&nbsp;  \r\n\t\t\t\t\t\t\t\t{race.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t\t\t\t<u>Homeworld</u>:&nbsp; \r\n\t\t\t\t\t\t\t\t{planet.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t\t\t\t<u>Films</u>:&nbsp; \r\n\t\t\t\t\t\t\t\t{movies}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\t\t\t\r\n\t}\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nconst Footer = function() {\r\n\treturn (\r\n\t\t<footer className=\"pa2 ph5-m ph6-l tc bg-near-black\">\r\n\t\t    <small className=\"pa2 f6 db tc lightest-blue\">\r\n\t\t    \t<b className=\"ttu\">GUILHERME BRUNNER</b> © 2019, All Rights Reserved\r\n\t\t    </small>\r\n\t\t    <small className=\"pa2\">\r\n\t\t    \t<a href=\"https://sgtbrunner.github.io/\"\r\n\t\t       \t   rel=\"noopener noreferrer\"\r\n\t\t       \t   target=\"_blank\">\r\n\t\t    \t\t<div className=\"f6 dib ph2 link lightest-blue dim\">Visit my <b>PORTFOLIO</b></div>\r\n\t\t   \t\t</a>\r\n\t\t   \t</small>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\nimport Header from '../components/Header';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport CreateList from '../components/SupportFunctions';\nimport Modal from '../components/Modal';\nimport {getStats} from '../components/SupportFunctions';\nimport {getFilms} from '../components/SupportFunctions';\nimport Footer from '../components/Footer';\nimport './App.css';\n\nclass App extends Component {\n  // STATE DECLARATION AND INITIALIZATION\n  constructor() {\n    super()\n    this.state = {\n      characters: [],\n      searchfield: '',\n      clickedcard: '',\n      race: '',\n      planet: '',\n      movies: '',\n      showmodal: false\n    }\n  }\n\n  // componentDidMount() IS A LIFECYCLE HOOK THAT RUNS ONCE THE APP COMPONENT IS MOUNTED IN \n  // INDEX.HTML. IN THIS CASE, IT UPDATES THIS.STATE.CHARACTERS WITH THE RETURNED ARRAY OF \n  // CHARACTERS FROM GETCHARACTERS()\n  componentDidMount() {\n  // ** Fetches all characters from SWAPI\n    CreateList().then(response => this.setState({characters: response}));\n  }\n\n  // TRIGGERED EVERY TIME THE SEARCHBOX CHANGES\n  // ** Actively changes displayed characters to seached value\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value});\n  }\n\n  // TRIGGERED EVERY TIME A CARD IS CLICKED\n  openModal = (event) => {\n  // ** Fetches asynchronous character information and open modal\n    this.setState({clickedcard: this.state.characters[event.target.id]})\n    getStats(this.state.characters[event.target.id].species)\n    .then(response => this.setState({race: response}));\n    getStats(this.state.characters[event.target.id].homeworld)\n    .then(response => this.setState({planet: response}));\n    getFilms(this.state.characters[event.target.id].films)\n    .then(response => this.setState({movies: response}));\n    this.setState({showmodal: true});\n  }\n\n  // TRIGGERED EVERYTIME X OR OUTER MODAL IS CLICKED\n  onCloseClick = () => {\n  // ** Set states to initial values and close modal\n    this.setState({\n      clickedcard: '',\n      race: '',\n      planet: '',\n      movies: '',\n      showmodal: false\n    });\n  }\n\n  // RENDER TO INDEX.HTML\n  render() {\n    const filteredCharacters = this.state.characters.filter(character => {\n    // Needs .toLowerCase() on both sides of the declaration to compare input to user.name on the same level\n        return character.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n      } \n    );\n\n    if (!this.state.characters.length) {\n        return (\n            <div id=\"temp-page\">\n              <div className =\"page-loader animate-flicker\">Please wait...</div>\n            </div>      \n      )} else {\n            return (\n              <div>\n                <Header />\n                <div id=\"flex-container\">\n                  <SearchBox searchChange={this.onSearchChange}/>\n                  <CardList \n                      characters = {this.state.characters}\n                      filteredCharacters = {filteredCharacters}\n                      openModal = {this.openModal}\n                  />\n                  <Modal \n                    showModal = {this.state.showmodal} \n                    character = {this.state.clickedcard}\n                    race = {this.state.race}\n                    planet = {this.state.planet}\n                    movies = {this.state.movies}\n                    onCloseClick = {this.onCloseClick}\n                  />\n                </div>\n                <Footer />\n              </div>\n            )        \n        }\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}