{"version":3,"sources":["assets/img/logo.png","components/Header.js","components/SearchBox.js","utils/supportFunctions.utils.js","components/Card.js","components/CardList.js","components/Modal.js","components/Footer.js","redux/characters/characters.types.js","App.js","redux/characters/characters.actions.js","redux/characters/characters.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","Header","href","className","id","src","require","alt","SearchBox","searchChange","type","placeholder","onChange","pages","urls","getCharacters","a","getData","concatArray","console","log","Promise","all","map","url","fetch","response","json","array","i","people","length","concat","results","createList","list","item","index","obj1","obj2","prop","hasOwnProperty","augment","getImage","getStats","toString","getFilms","movies","movie","title","Card","name","openModal","onClick","CardList","characters","filteredCharacters","character","key","Modal","showModal","race","planet","onCloseClick","birth_year","gender","Footer","rel","target","charactersActionTypes","App","props","onSearchChange","event","setState","searchfield","value","clickedcard","state","species","then","homeworld","films","showmodal","this","filter","toLowerCase","includes","Component","connect","dispatch","INITIAL_STATE","charactersReducer","action","fetchData","data","catch","error","combineReducers","middleWares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95ad52bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fd0488c7.png\";","import React from 'react';\n\nexport const Header = function() {\n\treturn (\n\t\t<a href=\"#flex-container\">\n\t\t\t<div className=\"cover-container\">\n\t\t\t\t<img id =\"cover-image\" src={require(\"../assets/img/logo.png\")} alt=\"logo\"/>\n\t\t\t</div>\n\t\t</a>\n\t)\n}\n\nexport default Header;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t\t<div className=\"pa2 ma3 br3 custom-box\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"f4 pa2 w-100 ba bw1 custom-field\"\n\t\t\t\t\ttype=\"search\" \n\t\t\t\t\tplaceholder=\"find your favorite Star Wars character...\"\n\t\t\t\t\tonChange={searchChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t);\n }\n\n export default SearchBox;","// ** These functions support the main App and its Components dealing with\n// API, its errors and inconsistencies.  \n\n// VARIABLE DECLARATION\n\tlet pages = [];\n\tconst urls = [\n\t\t'https://swapi.dev/api/people/',\n\t\t'https://swapi.dev/api/people/?page=2',\n\t\t'https://swapi.dev/api/people/?page=3',\n\t\t'https://swapi.dev/api/people/?page=4',\n\t\t'https://swapi.dev/api/people/?page=5',\n\t\t'https://swapi.dev/api/people/?page=6',\n\t\t'https://swapi.dev/api/people/?page=7',\n\t\t'https://swapi.dev/api/people/?page=8',\n\t\t'https://swapi.dev/api/people/?page=9',\n\t]\n\t\n// FUN FUN FUNCTIONS\n// Gets all the characters from different pages and concat them in a single array\nconst getCharacters = async function() {\n\ttry {\n\t\tawait getData();\t\t\t\n\t\treturn concatArray(pages);\n\t} catch (err) {\n\t   \tconsole.log('ooooooops', err);\t\t\n\t}\n}\n\n// Fetches all the character data information from API server and store it in pages as it's defined on SWAPI\nconst getData = async function() {\n\ttry {\n\t\tpages = await Promise.all(urls.map(async function(url) {\n\t        const response = await fetch(url);\n\t        return await response.json();\n\t    }));\n\t} catch (err) {\n\t   \t\tconsole.log('ooooooops', err);\t\n\t}\n}\n\n// Function for concating information in an array\nconst concatArray = (array) => {\n\tlet people = [];\n\tlet i;\n\tfor( i=0 ; i<array.length ; i++ ) {\n\t\tpeople = people.concat(array[i].results);\n\t}\n\treturn people;\n}\n\n// ** This auxiliar function adds obj2 props into obj1 and returns obj1\nconst augment = (obj1, obj2) => {\n\tlet prop;\n\tfor(prop in obj2) {\n\t\tif (obj2.hasOwnProperty(prop) && !obj1[prop]) {\n\t\t\tobj1[prop] = obj2[prop];\n\t\t}\n\t}\n\treturn obj1;\n}\n\n// ** This function adds ID property to every object without ID inside a given array of objects\nconst addId = (array) => {\n\tarray.map((item, index) => {\n\t\t\tconst newprop = {id: index}\n\t\t\treturn item = augment(item, newprop);\n\t})\n}\n\nexport const createList = async function() {\n\tlet list = await getCharacters();\n\taddId(list);\n\treturn list;\n}\n\n// ** SWAPI has an issue handling https://swapi.co/api/people/17/ returnig error 404,\n// \twhich can be bypassed with the following function\nexport const getImage = (index) => {\n\t\tif (index < 16) {\n\t\t\t\treturn `https://starwars-visualguide.com/assets/img/characters/${(index+1)}.jpg`;\n\t\t\t} else {\n\t\t\t\treturn `https://starwars-visualguide.com/assets/img/characters/${(index+2)}.jpg`;\n\t\t}\n\t}\n\n\t\t// Used for fetching \"species\" and \"homeworld\" information from characters\nexport const getStats = async function(url) {\n\t\t// SWAPI hasn't defined \"species\" nor \"homeworld\" for some characters, therefore it has to be handled accordingly\n\t\tif (url.toString()!=='' && url.toString()!==[] && url.toString()!=={}) {\n\t\t\ttry {\t\t\n\t\t        const response = await fetch(url);\n\t\t        return await response.json();\n\t\t\t} catch (err) {\n\t\t   \t\tconsole.log('ooooooops', err);\t\t\n\t\t\t}\t\n\t\t} else {\n\t\t\treturn await {\"name\": \"unknown\"};\n\t\t}\n\t}\n\n\t// Used for fetching \"films\" information from characters\nexport const getFilms = async function(urls) {\n\t\tlet movies = '';\n\t\tlet i=0;\n\t\ttry {\n\t\t\tfor (i=0; i<urls.length; i++) {\n\t\t\t\tlet response = await fetch(urls[i]);\n\t\t\t\tlet movie = await response.json();\n\t\t\t\tif (i < urls.length-1) {\n\t\t\t\t\tmovies += movie.title + ', ';\n\t\t\t\t} else {\n\t\t\t\t\tmovies += movie.title;\n\t\t\t\t}\n\t\t\t} \n\t\t} catch (err) {\n\t\t   \t\tconsole.log('ooooooops', err);\t\n\t\t\t}\n\t\t  \treturn movies;\n};","import React from 'react';\nimport {getImage} from '../utils/supportFunctions.utils'\n\nconst Card = function({name, index, openModal}) {\n\treturn (\n\t\t<div onClick={openModal}>\n\t\t\t<div className=\"card\" id={index}>\n\t\t\t\t\t<img className =\"picture\" \n\t\t\t\t\t\t src={getImage(index)} \n\t\t\t\t\t\t alt=\"character-portrait\"\n\t\t\t\t\t\t id={index}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"title\"\n\t\t\t\t\t\t id={index}\n\t\t\t\t\t>{name}\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = function({characters, filteredCharacters, openModal}) {\n\tif (filteredCharacters.length) {\n\t\treturn (\n\t\t\t<div id='cardlist'>\n\t\t\t\t{\n\t\t\t\t\tfilteredCharacters.map((character, index) =>{\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\t\tname = {character.name}\n\t\t\t\t\t\t\t\t\tindex = {character.id}\n\t\t\t\t\t\t\t\t\tkey = {character.id}\n\t\t\t\t\t\t\t\t\topenModal = {openModal}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\t          \n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t\t<div className=\"pa2 ma3 custom-field tc\">\n\t\t\t\t\t<p1 className=\"custom-font animate-flicker tc\">No characters found!</p1>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default CardList;","import React from 'react';\nimport {getImage} from '../utils/supportFunctions.utils';\n\nconst Modal = function({showModal, character, race, planet, movies, onCloseClick}) {\n\tlet showContent = (race && planet && movies) ? true : false;\n\tif (!showModal) {\n\t\t\treturn null;\n\t} else if(!showContent){\t\t\n\t\t\treturn (\n\t\t\t\t<div id=\"myModal\"\n\t\t\t\t\t className=\"modal\"\n\t\t\t\t\t onClick={onCloseClick}>\n\t\t\t\t\t<div className=\"modal-load\">\n\t\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div id=\"myModal\"\n\t\t\t\t\t className=\"modal\"\n\t\t\t\t\t onClick={onCloseClick}>\n\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t<span className=\"close\"\n\t\t\t\t\t\t\t  onClick={onCloseClick}\n\t\t\t\t\t\t\t  >&times;\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div className=\"grid-container\">\n\t\t\t\t\t\t\t<div className=\"char-name\">\n\t\t\t\t\t\t\t\t{character.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<img src={getImage(character.id)} \n\t\t\t\t\t\t\t\t className=\"portrait\"\n\t\t\t\t\t\t\t\t alt={character.id} />\n\t\t\t\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t\t\t\t<u>Birth Year</u>:&nbsp;  \n\t\t\t\t\t\t\t\t{character.birth_year}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t\t\t\t<u>Gender</u>:&nbsp;  \n\t\t\t\t\t\t\t\t{character.gender}\n\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t\t\t\t<u>Species</u>:&nbsp;  \n\t\t\t\t\t\t\t\t{race.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t\t\t\t<u>Homeworld</u>:&nbsp; \n\t\t\t\t\t\t\t\t{planet.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t\t\t\t<u>Films</u>:&nbsp; \n\t\t\t\t\t\t\t\t{movies}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\t\t\t\n\t}\n}\n\nexport default Modal;","import React from 'react';\n\nconst Footer = function() {\n\treturn (\n\t\t<footer className=\"pa2 ph5-m ph6-l tc bg-near-black\">\n\t\t    <small className=\"pa2 f6 db tc lightest-blue\">\n\t\t    \t<b className=\"ttu\">GUILHERME BRUNNER</b> © 2019, All Rights Reserved\n\t\t    </small>\n\t\t    <small className=\"pa2\">\n\t\t    \t<a href=\"https://sgtbrunner.github.io/\"\n\t\t       \t   rel=\"noopener noreferrer\"\n\t\t       \t   target=\"_blank\">\n\t\t    \t\t<div className=\"f6 dib ph2 link lightest-blue dim\">Visit my <b>PORTFOLIO</b></div>\n\t\t   \t\t</a>\n\t\t   \t</small>\n\t\t</footer>\n\t)\n}\n\nexport default Footer;","export const charactersActionTypes = {\n    GET_CHARACTERS: 'GET_CHARACTERS',\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './components/Header';\nimport SearchBox from './components/SearchBox';\nimport CardList from './components/CardList';\nimport Modal from './components/Modal';\nimport Footer from './components/Footer';\nimport { getCharacters } from './redux/characters/characters.actions';\nimport { createList, getStats, getFilms } from './utils/supportFunctions.utils';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      characters: [],\n      searchfield: '',\n      clickedcard: '',\n      race: '',\n      planet: '',\n      movies: '',\n      showmodal: false\n    }\n    console.log(props)\n  }\n\n  componentDidMount() {\n    // this.props.getCharacters();\n    createList().then(response => this.setState({characters: response}));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value});\n  }\n\n  openModal = (event) => {\n    this.setState({clickedcard: this.state.characters[event.target.id]})\n    getStats(this.state.characters[event.target.id].species)\n    .then(response => this.setState({race: response}));\n    getStats(this.state.characters[event.target.id].homeworld)\n    .then(response => this.setState({planet: response}));\n    getFilms(this.state.characters[event.target.id].films)\n    .then(response => this.setState({movies: response}));\n    this.setState({showmodal: true});\n  }\n\n  onCloseClick = () => {\n    this.setState({\n      clickedcard: '',\n      race: '',\n      planet: '',\n      movies: '',\n      showmodal: false\n    });\n  }\n\n  render() {\n    const filteredCharacters = this.state.characters.filter(character => {\n        return character.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n      } \n    );\n\n    if (!this.state.characters.length) {\n        return (\n            <div id=\"temp-page\">\n              <div className =\"page-loader animate-flicker\">Please wait...</div>\n            </div>      \n      )} else {\n            return (\n              <div>\n                <Header />\n                <div id=\"flex-container\">\n                  <SearchBox searchChange={this.onSearchChange}/>\n                  <CardList \n                      characters = {this.state.characters}\n                      filteredCharacters = {filteredCharacters}\n                      openModal = {this.openModal}\n                  />\n                  <Modal \n                    showModal = {this.state.showmodal} \n                    character = {this.state.clickedcard}\n                    race = {this.state.race}\n                    planet = {this.state.planet}\n                    movies = {this.state.movies}\n                    onCloseClick = {this.onCloseClick}\n                  />\n                </div>\n                <Footer />\n              </div>\n            )        \n        }\n  }\n}\n\nconst maptDispatchToProps = dispatch => ({\n  getCharacters: () => dispatch(getCharacters())\n});\n\nconst mapStateToProps = state => ({\n  characters: state.characters.characters\n});\n\nexport default connect(mapStateToProps, maptDispatchToProps)(App);","import { charactersActionTypes } from './characters.types';\n\nexport const getCharacters = () => ({\n    type: charactersActionTypes.GET_CHARACTERS,\n});\n","import { charactersActionTypes } from './characters.types';\n\nimport { createList } from '../../utils/supportFunctions.utils';\n\nconst INITIAL_STATE = {\n    characters: [],\n};\n\nconst charactersReducer = ( state = INITIAL_STATE, action ) => {\n    const fetchData = async () => {\n        return await createList();\n    };\n\n    switch(action.type) {\n        case charactersActionTypes.GET_CHARACTERS:\n            return {\n                ...state,\n                characters: fetchData().then(response => response.json()).then(data => {return data}).catch(error => console.log(error)),\n            };\n        default:\n            return state;\n    };\n};\n\nexport default charactersReducer;","import { combineReducers } from 'redux';\n\nimport charactersReducer from './characters/characters.reducer';\n\nexport default combineReducers({\n    characters: charactersReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middleWares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.css';\nimport 'tachyons';\n\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}